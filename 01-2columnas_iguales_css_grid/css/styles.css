html {
    box-sizing: border-box;
    font-size: 62.5%;
}

*,
*:before,
*:after {
    box-sizing: inherit;
}

body {
    font-family: 'Raleway', sans-serif;
    font-size: 1.6rem;
}

img {
    max-width: 100%;
}

h1 {
    font-size: 4rem;
}

.contenedor {
    max-width: 900px;
    width: 95%;
    margin: 0 auto;
}

.entrada-blog a {
    display: inline-block;
    background-color: #2196F3;
    color: white;
    padding: 10px 20px;
    text-decoration: none;
    font-weight: bold;
    text-transform: uppercase;
}
@media (min-width: 600px) {
    .dos-columnas {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        column-gap: 2rem;
    }
}
/*display grid solo afectara al primer nivel de hijos*/
/*Los pasos para hacer esto son:
1.- crear la clase en el html div
2- crear el @media query en el css con el width que queramos segun dispositivo
3.-aplicar la clase dentro del media query
4.- aplicar el display, el template para el numero de columnas y
el gap para la separacion entre ellas.*/

/*Si quisieramos agregar mas columnas, el display:grid respetara el 
ancho que le hemos dado y las dispondra debajo. Esto no lo hace
flex-box*/